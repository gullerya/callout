export{t as callout};function t(t){if(t&&t.length)for(let o=0,l=t.length;o<l;o++){const l=t[o];l.scrollIntoView({behavior:"smooth"}),e(n(l))}else console.error("invalid or empty array of elements to call out over")}function n(t){return t.getBoundingClientRect()}function e(t){const n=document.createElement("gullerya-callout");document.body.appendChild(n)}const o=document.createElement("template");o.innerHTML='\n\t<style>\n\t\t:host {\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tz-index: 1000;\n\t\t}\n\n\t\t.man-pan {\n\t\t\tposition: absolute;\n\t\t\ttop: 50px;\n\t\t\tleft: 500px;\n\t\t\tcolor: #000;\n\t\t}\n\n\t\t.callout-vilon {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\n\t\t.mask-overlay {\n\t\t\tx: 0;\n\t\t\ty: 0;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tfill: #aaa;\n\t\t\topacity: 0.7;\n\t\t}\n\n\t\t.mask-window {\n\t\t\tx: calc(50% - 12px);\n\t\t\ty: calc(50% - 12px);\n\t\t\twidth: 24px;\n\t\t\theight: 24px;\n\t\t\trx: 8px;\n\t\t\ttransition: all 200ms;\n\t\t}\n\t</style>\n\n\t<svg class="callout-vilon">\n\t\t<defs>\n\t\t\t<mask id="callout-mask">\n\t\t\t\t<rect class="mask-overlay"/>\n\t\t\t\t<rect class="mask-window"/>\n\t\t\t</mask>\n\t\t</defs>\n\t\t<rect x="0" y="0" width="100%" height="100%" mask="url(#callout-mask)"/>\n\t</svg>\n\t<div class="man-pan">\n\t\tSome text here\n\t</div>\n',customElements.define("gullerya-callout",class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(o.content.cloneNode(!0))}});