import{spotlight as t}from"./libs/spotlight.min.js";import{tooltip as e,POSITIONS as n}from"./libs/tooltip.min.js";const o=Symbol("spotlight.key"),s=Symbol("tooltip.key"),l=Symbol("entries.list"),i=Symbol("current.entry"),c=Symbol("next.method"),r=Symbol("prev.method"),a=Symbol("move.to.method");export function callout(t){const e=(Array.isArray(t)?t:[t]).filter(t=>t&&t.target&&t.target.nodeType===Node.ELEMENT_NODE&&t.content).map(t=>{const e={target:t.target};if(t.content.nodeType===Node.DOCUMENT_FRAGMENT_NODE)e.content=t.content;else{const n=document.createDocumentFragment();n.appendChild(document.createTextNode(t.content)),e.content=n}return e});if(!e.length)return void console.error("no (valid) targets to call out over");const n=document.createElement("call-out"),o=window.getComputedStyle(document.documentElement).overflow;document.documentElement.style.overflow="hidden",n.addEventListener("close",()=>{document.documentElement.style.overflow=o}),n[l]=e,document.documentElement.appendChild(n)};const d=document.createElement("template");d.innerHTML='\n\t<style>\n\t\t:host {\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tz-index: 9999;\n\t\t\toverflow: hidden;\n\t\t}\n\n\t\t.man-pan {\n\t\t\tposition: absolute;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\twidth: 100%;\n\t\t\tcursor: default;\n\t\t\tuser-select: none;\n\t\t\ttransition: all 1s;\n\t\t}\n\n\t\t.man-pan.above {\n\t\t\ttop: 48px;\n\t\t}\n\n\t\t.man-pan.below {\n\t\t\tbottom: 48px;\n\t\t}\n\n\t\t.button {\n\t\t\tflex: 0 0 48px;\n\t\t\theight: 48px;\n\t\t\tmargin: 0 12px;\n\t\t\tborder-radius: 50%;\n\t\t\tbackground-color: #fff;\n\t\t\tfont-size: 1.4em;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tbox-shadow: 0 0 8px rgba(0, 0, 0, 0.5);\n\t\t}\n\n\t\t.button.close {\n\t\t\tline-height: 48px;\n\t\t}\n\t</style>\n\n\t<div class="man-pan">\n\t\t<div id="callout-button-prev" class="button">&#11207;</div>\n\t\t\x3c!--tool-tip data-target-id="callout-button-prev">\n\t\t\t<slot name="prev-label">PREVIOUS</slot>\n\t\t</tool-tip--\x3e\n\t\t<div id="callout-button-next" class="button">&#11208;</div>\n\t\t\x3c!--tool-tip data-target-id="callout-button-next">\n\t\t\t<slot name="next-label">NEXT</slot>\n\t\t</tool-tip--\x3e\n\t\t<div class="button close">&#128473;</div>\n\t</div>\n',customElements.define("call-out",class extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});t.appendChild(d.content.cloneNode(!0)),t.querySelector("#callout-button-next").addEventListener("click",()=>this[c]()),t.querySelector("#callout-button-prev").addEventListener("click",()=>this[r]()),t.querySelector(".button.close").addEventListener("click",()=>this.close()),this[i]=-1}connectedCallback(){this[o]=t(),this[s]=e(),this[s].position=n.far,this[s].classList.add("light"),this[c]()}close(){this[o].close(),this[s].remove(),this.parentNode.removeChild(this),this.dispatchEvent(new Event("close"))}[c](){const t=this[l],e=this[i]+1;t&&t.length?e>=t.length?console.error('should NOT "next" after last'):(this[a](t[e]),this[i]=e,0===e?this.classList.add("first"):this.classList.remove("first"),e===t.length-1&&this.classList.add("last")):console.error("no entries list")}[r](){const t=this[l],e=this[i]-1;t&&t.length?e<0?console.error('should NOT "prev" before first'):(this[a](t[e]),this[i]=e,0===e&&this.classList.add("first"),e===t.length-2&&this.classList.remove("last")):console.error("no entries list")}[a](t){this.ensureElementSeen(t.target);const e=this.getScreenRect(t.target);this[s].hide(),this[o].moveTo(t.target).then(()=>{this[s].show(this[o],t.content.cloneNode(!0))});const n=this.shadowRoot.querySelector(".man-pan");e.bottom>document.documentElement.clientHeight/2?(n.classList.remove("below"),n.classList.add("above")):(n.classList.remove("above"),n.classList.add("below"))}ensureElementSeen(t){t.scrollIntoView()}getScreenRect(t){return t.getBoundingClientRect()}});